unit UnitDM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MySQL,
  FireDAC.Phys.MySQLDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.Phys.FB, FireDAC.Phys.FBDef, Data.FMTBcd,
  Data.SqlExpr, Vcl.ExtCtrls, UnitConf, UnitBiblioteca, Vcl.Forms;

type
  TDM = class(TDataModule)
    CONEXAO: TFDConnection;
    SGA: TFDTable;
    dsSGA: TDataSource;
    SQLCONSULTA: TFDQuery;
    SGAID: TStringField;
    SGASISTEMA: TStringField;
    SGAERRORESUMIDO: TStringField;
    SGAERRO: TMemoField;
    SGASOLUCAO: TMemoField;
    SGASCRIPT: TMemoField;
    SGAIMAGEM: TBlobField;
    SGAANEXO: TBlobField;
    BUSCA: TFDQuery;
    F2_CONS: TFDQuery;
    CONSULTA_CAD: TFDQuery;
  private
    procedure CarregaBanco;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DM: TDM;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

uses UnitPrincipal;

{$R *.dfm}

procedure TDM.CarregaBanco;
begin
   try   //Tentar executar
      CONEXAO.Params.Database := GetValorIni(ExtractFilePath(Application.ExeName), 'CONFIGURACAO', 'LOCAL');
      CONEXAO.Connected := true;
   except  //Se não executar
      Configuracao.ShowModal;
   end;
end;

end.
